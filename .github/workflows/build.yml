name: Build

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/ISSUE_TEMPLATE'

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Write temporary key
        if: hashFiles('key.jks') == '' && !steps.vars.outputs.HAS_SECRET
        run: |
          keytool -v -genkey -alias a -dname CN=_ -storepass passwd -keypass passwd -keyalg RSA -keysize 2048 -keystore key.jks
          echo KEYSTORE_PASSWORD=passwd >> signing.properties
          echo KEYSTORE_ALIAS=a >> signing.properties
          echo KEYSTORE_ALIAS_PASSWORD=passwd >> signing.properties
          echo KEYSTORE_FILE=../key.jks >> signing.properties
          keytool -v -list -storepass passwd -keystore key.jks
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-app-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            gradle-deps
      - name: Cache Gradle Build
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: gradle-builds-app-${{ github.sha }}
          restore-keys: |
            gradle-builds
      - name: Build with Gradle
        id: buildWithGradle
        run: |
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          ./gradlew :manager:assembleRelease
           releaseName=`ls manager/build/outputs/apk/user/release/shizuku*-v*-user-userRelease.apk | awk -F '(/|.apk)' '{print $6}'` && echo "releaseName=$releaseName" >> $GITHUB_OUTPUT
      - name: Upload release
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.buildWithGradle.outputs.releaseName }}
          path: "manager/build/outputs/apk"
      - name: Upload mappings
        uses: actions/upload-artifact@v4
        with:
          name: mappings
          path: "manager/build/outputs/mapping"
